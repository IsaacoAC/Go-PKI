basePath: /
definitions:
  models.User:
    properties:
      apellidomaterno:
        type: string
      apellidopaterno:
        type: string
      correo:
        type: string
      curp:
        type: string
      id:
        type: string
      nombre:
        type: string
      password:
        type: string
      rfc:
        type: string
    type: object
info:
  contact:
    email: your@mail.com
    name: API Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API
  version: "1.0"
paths:
  /CreateUser:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Datos de usuario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: Create a new user
      tags:
      - Users
  /DropUser:
    delete:
      consumes:
      - application/json
      description: Delete data user from DB
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: Delete data user
      tags:
      - Users
  /GetUser:
    get:
      consumes:
      - application/json
      description: Select data user from DB
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: Get data user
      tags:
      - Users
  /Login:
    post:
      consumes:
      - application/json
      description: Create a new login
      parameters:
      - description: User/Password
        in: body
        name: Login
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a new login to database
      tags:
      - Login
  /ModifyUser:
    post:
      consumes:
      - application/json
      description: Modify user data from DB
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      - description: Datos de Usuario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: Modify user data
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
